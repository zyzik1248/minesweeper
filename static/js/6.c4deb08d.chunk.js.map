{"version":3,"sources":["database/FirebaseHelper.tsx","pages/Score.css.tsx","score/SingleScore.css.tsx","score/TableTitle.tsx","score/SingleScore.tsx","pages/Score.tsx"],"names":["initialDatabase","firebase","apps","length","initializeApp","apiKey","authDomain","projectId","databaseURL","storageBucket","writeData","data","database","ref","push","readData","a","Promise","resolve","reject","once","snapshot","Object","values","val","forEach","value","Wrapper","styled","div","SingleWinner","Row","ColumnHead","Index","TableTitleStyled","Hr","hr","TableTitle","level","width","height","mines","Levels","SingleScore","name","time","id","style","Score","useState","winners","setWinners","isEmpty","setIsEmpty","isLoading","setIsLoading","sortByTime","b","useEffect","setTimeout","then","d","i","w","filter","sort","wCustom","sortCustom","splice","arr","Loading","invisible","map","row","el","index2"],"mappings":"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","file":"static/js/6.c4deb08d.chunk.js","sourcesContent":["import firebase from 'firebase'\n\nexport const initialDatabase = () => {\n  if (!firebase.apps.length) {\n    const firebaseConfig = {\n      apiKey: \"AIzaSyARXNmjw3dtkJ05clEifNoCVpXcWxmPL-Q\",\n      authDomain: \"minesweeper-d2be7.firebaseapp.com\",\n      projectId: \"minesweeper-d2be7\",\n      databaseURL: \"https://minesweeper-d2be7-default-rtdb.europe-west1.firebasedatabase.app/\",\n      storageBucket: \"minesweeper-d2be7.appspot.com\",\n    };\n    firebase.initializeApp(firebaseConfig)\n  }\n}\n\nexport const writeData = (data: any) => {\n  initialDatabase();\n  firebase.database().ref('winners').push(data);\n}\n\nexport const readData = async () => {\n  initialDatabase();\n  return new Promise(async (resolve, reject) => {\n    const data: any[] = [];\n    try {\n      const snapshot = await firebase.database().ref('winners').once('value');\n      Object.values(snapshot.val()).forEach((value) => {\n        data.push(value);\n      });\n      return resolve(data);\n    } catch {\n      return reject(null)\n    }\n  });\n}","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column; \n  padding-bottom: 20px;\n`","import styled from 'styled-components'\n\nexport const SingleWinner = styled.div`\n  width: 50%;\n  margin: 4px;\n\n  @media only screen and (max-width: 900px) {\n    width: 80%;\n    margin-left: 68px;\n  }\n\n  @media only screen and (max-width: 550px) {\n    font-size: 13px;\n    margin-left: 53px;\n  }\n\n  @media only screen and (max-width: 400px) {\n    font-size: 12px;\n    margin-left: 43px;\n  }\n`\n\nexport const Row = styled.div`\n  background-color: #e6e6e6;\n  line-height: 60px;\n  height: 60px;\n  position: relative;\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  flex-wrap: nowrap; \n  padding: 0 30px;\n\n  @media only screen and (max-width: 550px) {\n    height: 45px;\n    line-height: 45px;\n  }\n\n  @media only screen and (max-width: 400px) {\n    height: 35px;\n    line-height: 35px;\n    padding: 0 5px;\n  }\n`\n\nexport const ColumnHead = styled.div`\n  font-weight: bold;\n`\n\nexport const Index = styled.div`\n  background-color: #ff704d;\n  position: absolute;\n  height: 60px;\n  width: 60px;\n  left: -8px;\n  text-align: center;\n  font-size: 20px;\n  transform: translateX(-100%);\n\n  @media only screen and (max-width: 550px) {\n    height: 45px;\n    width: 45px;\n    font-size: 18px;\n  }\n\n  @media only screen and (max-width: 400px) {\n    height: 35px;\n    width: 35px;\n    font-size: 15px;\n  }\n`\n\nexport const TableTitleStyled = styled.div`\n  width: 50%;\n  text-align: center;\n  margin-top: 35px;\n\n  @media only screen and (max-width: 900px) {\n    width: 80%;\n  }\n\n  @media only screen and (max-width: 550px) {\n    font-size: 18px;\n  }\n\n  @media only screen and (max-width: 400px) {\n    font-size: 15px;\n  }\n`\n\nexport const Hr = styled.hr`\n  color: #66ccff;\n`","import React, { FunctionComponent } from 'react'\nimport { Levels } from './../reducers/gameParameters/types'\nimport { TableTitleStyled, Hr } from './SingleScore.css'\n\nexport interface Score {\n  level: number,\n  width: number,\n  height: number,\n  mines: number\n}\n\nconst TableTitle: FunctionComponent<Score> = ({ level, width, height, mines }) => {\n  return (\n    <TableTitleStyled>\n      {Levels[level]} minefield: {width} x {height} , {mines} mines\n      <Hr/>\n    </TableTitleStyled>\n  )\n}\n\nexport default TableTitle","import React, { FunctionComponent } from 'react'\nimport { SingleWinner, Row, Index, ColumnHead } from './SingleScore.css'\n\nexport interface Score {\n  name: string,\n  time: number,\n  id: number\n}\n\nconst SingleScore: FunctionComponent<Score> = ({ name, time, id }) => {\n  return (\n    <SingleWinner>\n      <Row>\n        <Index>{id}</Index>\n        <ColumnHead style={{width: '15%'}}>name:</ColumnHead>\n        <div style={{width: '60%'}}>{name}</div>\n        <ColumnHead style={{width: '15%'}}>time:</ColumnHead>\n        <div style={{width: '10%'}}>{time}</div>\n      </Row>\n    </SingleWinner>\n  )\n}\n\nexport default SingleScore;","import React, { useEffect, useState } from 'react'\n\nimport { Wrapper } from './Score.css'\nimport { readData } from './../database/FirebaseHelper'\nimport Loading from './../components/Loading'\nimport TableTitle from './../score/TableTitle'\nimport SingleScore from './../score/SingleScore'\n\nexport interface Winner {\n  name: string,\n  time: number,\n  width: number,\n  height: number,\n  mines: number,\n  level: number\n}\n\nexport interface Winners {\n  winners: Winner[][]\n}\n\nconst Score = () => {\n  const [winners, setWinners] = useState<Winners>({ winners: [] })\n  const [isEmpty, setIsEmpty] = useState(false)\n  const [isLoading, setIsLoading] = useState(true)\n\n  const sortByTime = (a: Winner, b: Winner): number => {\n    return a.time - b.time\n  }\n\n  const sortCustom = (a: Winner, b: Winner): number => {\n    if (a.width < b.width || a.height < b.height || a.mines < b.mines) {\n      return 1;\n    }\n    if (a.width > b.width || a.height > b.height || a.mines > b.mines) {\n      return -1;\n    }\n\n    return 0;\n  }\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (winners.winners.length === 0) {\n        readData().then((d) => {\n          const data: Winner[] = d as Winner[];\n\n          for (let i = 0; i < 3; i++) {\n\n            const w: Winner[] = data.filter((value: any) => {\n              return value.level === 2 - i;\n            }).sort((a: Winner, b: Winner) => sortByTime(a, b))\n\n            if (w.length > 0) {\n              winners.winners.push(w);\n            }\n          }\n\n          let wCustom: Winner[] = data.filter((value: Winner) => {\n            return value.level === 3;\n          }).sort((a: Winner, b: Winner) => sortCustom(a, b))\n\n          while (wCustom.length > 0) {\n            winners.winners.push(wCustom.filter((value: Winner) => {\n              return value.height === wCustom[0].height && value.width === wCustom[0].width\n                && value.mines === wCustom[0].mines\n            }).sort((a: Winner, b: Winner) => sortByTime(a, b)))\n\n            wCustom.splice(0, wCustom.length);\n            const arr = wCustom.filter((value: Winner) => {\n              return !(value.height === wCustom[0].height && value.width === wCustom[0].width\n                && value.mines === wCustom[0].mines)\n            })\n\n            for(let i=0; i<arr.length; i++){\n              wCustom[i] = arr[i]\n            }\n          }\n\n          setWinners({ winners: winners.winners })\n          setIsEmpty(data.length === 0)\n          setIsLoading(false)\n        })\n      }\n    }, 1000);\n  }, [winners]);\n\n  return (\n    <Wrapper>\n      <Loading invisible={!isLoading} />\n      <h1>Score</h1>\n      {\n        isEmpty &&\n        <div>\n          there are no any winners\n        </div>\n      }\n      {winners.winners.map((row) => (\n        <>\n          <TableTitle\n            level={row[0].level}\n            width={row[0].width}\n            height={row[0].height}\n            mines={row[0].mines}\n          />\n          {row.map((el, index2) => (\n            <SingleScore\n              id={index2 + 1}\n              name={el.name}\n              time={el.time}\n            />\n          ))}\n        </>\n      ))}\n    </Wrapper>\n  )\n}\n\nexport default Score"],"sourceRoot":""}